%Author: Kiarie Ndegwa u4742829
%Assignment 1 comp8420: Multi-layer and cascade neural networks for
%the classification of Diabete Mellitus.

%This project works on classifying different liver disorders based
%on a small data set comprised of 768 entries

%The paper accompanying the data set achieved a classification accuracy 76%.
clear
clc
%Keep the random seed the same during all network initialization during
%testing
rng('default')
DiabetesData = csvread('IndianDiabetesData.csv');

%Divide the data set into input attributes and binary outputs
inputs = DiabetesData(:, 1:end-1)';
outputs = DiabetesData(:, end)';

%Create validation indices with 10 fold cross validation
%----------------------------------------------------------------%
CVO = cvpartition(outputs(1, :), 'k', 10);

%These vectors keeps record of the test error on unprocessed data
errForwardUn = zeros(CVO.NumTestSets,1);
%---------------------------------------------------------------%

%---------------------------------------------------------------%
%------This part of the code uses unprocessed input data--------%
%---------------------------------------------------------------%
%This trains the neural net on unpre-processed data on a multi-layer net
for i = 1:CVO.NumTestSets
     
     trIdxUn = CVO.training(i);
     teIdxUn = CVO.test(i);
     train_inputsUn= inputs(:,trIdxUn);
     train_outputsUn= outputs(:,trIdxUn);
     test_inputsUn= inputs(:,teIdxUn);
     test_outputsUn= outputs(:,teIdxUn);
     %A multi-layered network generated by the feedfoward function
     netFoward = feedforwardnet([4, 2]);
     netFoward = train(netFoward, train_inputsUn, train_outputsUn);
    
     %Find test error on architecture.
     y_netForward = netFoward(test_inputsUn);
     errForwardUn(i) = sum(round(y_netForward)~=test_outputsUn)/length(test_outputsUn);
end

%Find accuracy of trained networks on unprocessed data
errForwardUn = sum(errForwardUn)/CVO.NumTestSets;
X = sprintf('Classification accuracy on unprocessed input data for multilayered network %.2f%%',(1-errForwardUn)*100);
disp(X);